# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//ark/runtime_core/ark_config.gni")
import("//build/config/ohos/rules.gni")
import("//build/ohos.gni")

config("asmjit_public_config") {
    include_dirs = [
        "$ark_third_party_root/asmjit/src",
    ]
    if (ark_standalone_build) {
        ldflags = [ "-lrt" ]
    }
}

config("asmjit_config") {
    cflags_cc = [
        "-Wno-bitwise-instead-of-logical",
        "-Wno-unused-but-set-variable",
        "-Wno-deprecated-copy"
    ]
}

asmjit_sources = [
    "src/asmjit/asmjit.h",

    "src/asmjit/core.h",
    "src/asmjit/core/api-build_p.h",
    "src/asmjit/core/api-config.h",
    "src/asmjit/core/arch.cpp",
    "src/asmjit/core/arch.h",
    "src/asmjit/core/assembler.cpp",
    "src/asmjit/core/assembler.h",
    "src/asmjit/core/builder.cpp",
    "src/asmjit/core/builder.h",
    "src/asmjit/core/callconv.cpp",
    "src/asmjit/core/callconv.h",
    "src/asmjit/core/codebuffer.h",
    "src/asmjit/core/codebufferwriter_p.h",
    "src/asmjit/core/codeholder.cpp",
    "src/asmjit/core/codeholder.h",
    "src/asmjit/core/compiler.cpp",
    "src/asmjit/core/compiler.h",
    "src/asmjit/core/constpool.cpp",
    "src/asmjit/core/constpool.h",
    "src/asmjit/core/cpuinfo.cpp",
    "src/asmjit/core/cpuinfo.h",
    "src/asmjit/core/datatypes.h",
    "src/asmjit/core/emitter.cpp",
    "src/asmjit/core/emitter.h",
    "src/asmjit/core/emitterutils.cpp",
    "src/asmjit/core/emitterutils_p.h",
    "src/asmjit/core/environment.cpp",
    "src/asmjit/core/environment.h",
    "src/asmjit/core/errorhandler.cpp",
    "src/asmjit/core/errorhandler.h",
    "src/asmjit/core/features.h",
    "src/asmjit/core/formatter.cpp",
    "src/asmjit/core/formatter.h",
    "src/asmjit/core/func.cpp",
    "src/asmjit/core/func.h",
    "src/asmjit/core/globals.cpp",
    "src/asmjit/core/globals.h",
    "src/asmjit/core/inst.cpp",
    "src/asmjit/core/inst.h",
    "src/asmjit/core/jitallocator.cpp",
    "src/asmjit/core/jitallocator.h",
    "src/asmjit/core/jitruntime.cpp",
    "src/asmjit/core/jitruntime.h",
    "src/asmjit/core/logger.cpp",
    "src/asmjit/core/logger.h",
    "src/asmjit/core/misc_p.h",
    "src/asmjit/core/operand.cpp",
    "src/asmjit/core/operand.h",
    "src/asmjit/core/osutils.cpp",
    "src/asmjit/core/osutils.h",
    "src/asmjit/core/raassignment_p.h",
    "src/asmjit/core/rabuilders_p.h",
    "src/asmjit/core/radefs_p.h",
    "src/asmjit/core/ralocal.cpp",
    "src/asmjit/core/ralocal_p.h",
    "src/asmjit/core/rapass.cpp",
    "src/asmjit/core/rapass_p.h",
    "src/asmjit/core/rastack.cpp",
    "src/asmjit/core/rastack_p.h",
    "src/asmjit/core/string.cpp",
    "src/asmjit/core/string.h",
    "src/asmjit/core/support.cpp",
    "src/asmjit/core/support.h",
    "src/asmjit/core/target.cpp",
    "src/asmjit/core/target.h",
    "src/asmjit/core/type.cpp",
    "src/asmjit/core/type.h",
    "src/asmjit/core/virtmem.cpp",
    "src/asmjit/core/virtmem.h",
    "src/asmjit/core/zone.cpp",
    "src/asmjit/core/zone.h",
    "src/asmjit/core/zonehash.cpp",
    "src/asmjit/core/zonehash.h",
    "src/asmjit/core/zonelist.cpp",
    "src/asmjit/core/zonelist.h",
    "src/asmjit/core/zonestack.cpp",
    "src/asmjit/core/zonestack.h",
    "src/asmjit/core/zonestring.h",
    "src/asmjit/core/zonetree.cpp",
    "src/asmjit/core/zonetree.h",
    "src/asmjit/core/zonevector.cpp",
    "src/asmjit/core/zonevector.h",

    "src/asmjit/x86.h",
    "src/asmjit/x86/x86archdata.cpp",
    "src/asmjit/x86/x86archdata_p.h",
    "src/asmjit/x86/x86assembler.cpp",
    "src/asmjit/x86/x86assembler.h",
    "src/asmjit/x86/x86builder.cpp",
    "src/asmjit/x86/x86builder.h",
    "src/asmjit/x86/x86callconv.cpp",
    "src/asmjit/x86/x86callconv_p.h",
    "src/asmjit/x86/x86compiler.cpp",
    "src/asmjit/x86/x86compiler.h",
    "src/asmjit/x86/x86emitter.h",
    "src/asmjit/x86/x86features.cpp",
    "src/asmjit/x86/x86features.h",
    "src/asmjit/x86/x86formatter.cpp",
    "src/asmjit/x86/x86formatter_p.h",
    "src/asmjit/x86/x86globals.h",
    "src/asmjit/x86/x86internal.cpp",
    "src/asmjit/x86/x86internal_p.h",
    "src/asmjit/x86/x86instdb.cpp",
    "src/asmjit/x86/x86instdb.h",
    "src/asmjit/x86/x86instdb_p.h",
    "src/asmjit/x86/x86instapi.cpp",
    "src/asmjit/x86/x86instapi_p.h",
    "src/asmjit/x86/x86operand.cpp",
    "src/asmjit/x86/x86operand.h",
    "src/asmjit/x86/x86rapass.cpp",
    "src/asmjit/x86/x86rapass_p.h",
]

asmjit_configs = [
    ":asmjit_public_config",
    "$ark_root:ark_config",
    "$ark_root/libpandabase:arkbase_public_config",
    ":asmjit_config",
]

ohos_static_library("libasmjit") {
    sources = asmjit_sources
    configs = asmjit_configs
    deps = [ "$ark_root/libpandabase:libarkbase" ]
    subsystem_name = "ark"
}

ohos_static_library("libasmjit_frontend_static") {
    sources = asmjit_sources
    configs = asmjit_configs
    deps = [ "$ark_root/libpandabase:libarkbase_frontend_static" ]
    subsystem_name = "ark"
}
